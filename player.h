/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'GameLogic.dll'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct IUE4Actor;
struct IItem;
struct IItem_vtbl;
struct IUE4Actor_vtbl;
struct ILocalPlayer;
struct IQuest;
struct IQuestState;
struct IQuestState_vtbl;
struct IQuest_vtbl;
struct IInventory;
struct IInventory_vtbl;
struct IFastTravel;
struct IFastTravel_vtbl;
struct IAchievement;
struct IAchievement_vtbl;
struct IPlayer_vtbl;
struct IActor_vtbl;
struct std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TimerSet::TimerEvent>,void *>;
struct std::_Func_base<void>;
struct type_info;
struct type_info_vtbl;
struct std::_Func_base<void>_vtbl;
struct std::_Func_base<void,Actor *>;
struct TimerSet;
struct std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,bool>,void *>;
struct AIZoneListener_vtbl;
struct std::_Tree_node<AIZoneListener *,void *>;
struct AIZone;
struct ActorRef<Actor>;
struct Spawner;
struct std::vector<IItem *,std::allocator<IItem *> >;
struct std::_Func_base<void,Actor *>_vtbl;
struct std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,NPCState>,void *>;
struct NPCStateTransition;
struct NPC;
struct std::_Tree_node<std::pair<IItem * const,float>,void *>;
struct std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *>;
struct std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>;
struct std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *>;
struct std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *>;
struct std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<bool,std::allocator<bool> > >,void *>;
struct Socket;
struct Socket_vtbl;
struct WriteStream;

/* 543 */
struct __cppobj IActor
{
  IActor_vtbl *__vftable /*VFT*/;
};

/* 566 */
struct __cppobj std::_Container_base0
{
};

/* 568 */
union std::_String_val<std::_Simple_types<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
  char _Alias[16];
};

/* 569 */
struct __cppobj std::_String_val<std::_Simple_types<char> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 570 */
struct __cppobj std::_String_alloc<0,std::_String_base_types<char> > : std::_String_val<std::_Simple_types<char> >
{
};

/* 571 */
const struct __cppobj std::string : std::_String_alloc<0,std::_String_base_types<char> >
{
};

/* 585 */
struct __cppobj ActorRef<IActor>
{
  IActor *m_object;
};

/* 588 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,bool> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<std::string const ,bool>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 589 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,bool>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,bool> > >
{
};

/* 590 */
struct __cppobj std::_Tree_buy<std::pair<std::string const ,bool>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,bool>> >
{
};

/* 591 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<std::string,bool,std::less<std::string >,std::allocator<std::pair<std::string const ,bool> >,0> > : std::_Tree_buy<std::pair<std::string const ,bool>>
{
};

/* 592 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::string,bool,std::less<std::string >,std::allocator<std::pair<std::string const ,bool> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<std::string,bool,std::less<std::string >,std::allocator<std::pair<std::string const ,bool> >,0> >
{
};

/* 593 */
struct __cppobj std::map<std::string,bool> : std::_Tree<std::_Tmap_traits<std::string,bool,std::less<std::string >,std::allocator<std::pair<std::string const ,bool> >,0> >
{
};

/* 546 */
struct __cppobj Vector3
{
  float x;
  float y;
  float z;
};

/* 547 */
struct __cppobj Rotation
{
  float pitch;
  float yaw;
  float roll;
};

/* 604 */
struct __cppobj Actor : IActor
{
  unsigned int m_refs;
  unsigned int m_id;
  IUE4Actor *m_target;
  TimerSet *m_timers;
  std::string m_blueprintName;
  ActorRef<IActor> m_owner;
  int m_health;
  std::map<std::string,bool> m_states;
  float m_forwardMovementFraction;
  float m_strafeMovementFraction;
  Vector3 m_remotePosition;
  Vector3 m_remoteVelocity;
  Rotation m_remoteRotation;
  float m_remoteLocationBlendFactor;
  Spawner *m_spawner;
};

/* 544 */
struct __cppobj IPlayer
{
  IPlayer_vtbl *__vftable /*VFT*/;
};

/* 889 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<IItem * const,ItemAndCount> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 890 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IItem * const,ItemAndCount>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<IItem * const,ItemAndCount> > >
{
};

/* 891 */
struct __cppobj std::_Tree_buy<std::pair<IItem * const,ItemAndCount>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IItem * const,ItemAndCount>> >
{
};

/* 892 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<IItem *,ItemAndCount,std::less<IItem *>,std::allocator<std::pair<IItem * const,ItemAndCount> >,0> > : std::_Tree_buy<std::pair<IItem * const,ItemAndCount>>
{
};

/* 1146 */
struct __cppobj std::_Tree<std::_Tmap_traits<IItem *,ItemAndCount,std::less<IItem *>,std::allocator<std::pair<IItem * const,ItemAndCount> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<IItem *,ItemAndCount,std::less<IItem *>,std::allocator<std::pair<IItem * const,ItemAndCount> >,0> >
{
};

/* 1147 */
struct __cppobj std::map<IItem *,ItemAndCount> : std::_Tree<std::_Tmap_traits<IItem *,ItemAndCount,std::less<IItem *>,std::allocator<std::pair<IItem * const,ItemAndCount> >,0> >
{
};

/* 676 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::string > > : std::_Container_base0
{
  std::_Tree_node<std::string,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 677 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::string> > : std::_Tree_val<std::_Tree_simple_types<std::string > >
{
};

/* 678 */
struct __cppobj std::_Tree_buy<std::string> : std::_Tree_alloc<0,std::_Tree_base_types<std::string> >
{
};

/* 679 */
struct __cppobj std::_Tree_comp<0,std::_Tset_traits<std::string,std::less<std::string >,std::allocator<std::string >,0> > : std::_Tree_buy<std::string>
{
};

/* 689 */
struct __cppobj std::_Tree<std::_Tset_traits<std::string,std::less<std::string >,std::allocator<std::string >,0> > : std::_Tree_comp<0,std::_Tset_traits<std::string,std::less<std::string >,std::allocator<std::string >,0> >
{
};

/* 855 */
struct __cppobj std::set<std::string> : std::_Tree<std::_Tset_traits<std::string,std::less<std::string >,std::allocator<std::string >,0> >
{
};

/* 720 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<IItem * const,float> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<IItem * const,float>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 730 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IItem * const,float>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<IItem * const,float> > >
{
};

/* 762 */
struct __cppobj std::_Tree_buy<std::pair<IItem * const,float>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IItem * const,float>> >
{
};

/* 763 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<IItem *,float,std::less<IItem *>,std::allocator<std::pair<IItem * const,float> >,0> > : std::_Tree_buy<std::pair<IItem * const,float>>
{
};

/* 764 */
struct __cppobj std::_Tree<std::_Tmap_traits<IItem *,float,std::less<IItem *>,std::allocator<std::pair<IItem * const,float> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<IItem *,float,std::less<IItem *>,std::allocator<std::pair<IItem * const,float> >,0> >
{
};

/* 1075 */
struct __cppobj std::map<IItem *,float> : std::_Tree<std::_Tmap_traits<IItem *,float,std::less<IItem *>,std::allocator<std::pair<IItem * const,float> >,0> >
{
};

/* 1174 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,unsigned int> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<std::string const ,unsigned int>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 1175 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,unsigned int>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,unsigned int> > >
{
};

/* 1176 */
struct __cppobj std::_Tree_buy<std::pair<std::string const ,unsigned int>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,unsigned int>> >
{
};

/* 1177 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<std::string,unsigned int,std::less<std::string >,std::allocator<std::pair<std::string const ,unsigned int> >,0> > : std::_Tree_buy<std::pair<std::string const ,unsigned int>>
{
};

/* 1178 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::string,unsigned int,std::less<std::string >,std::allocator<std::pair<std::string const ,unsigned int> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<std::string,unsigned int,std::less<std::string >,std::allocator<std::pair<std::string const ,unsigned int> >,0> >
{
};

/* 1179 */
struct __cppobj std::map<std::string,unsigned int> : std::_Tree<std::_Tmap_traits<std::string,unsigned int,std::less<std::string >,std::allocator<std::pair<std::string const ,unsigned int> >,0> >
{
};

/* 1187 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,std::vector<bool> > > > : std::_Container_base0
{
  std::_Tree_node<std::pair<std::string const ,std::vector<bool> >,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 1188 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,std::vector<bool> >> > : std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,std::vector<bool> > > >
{
};

/* 1189 */
struct __cppobj std::_Tree_buy<std::pair<std::string const ,std::vector<bool> >> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,std::vector<bool> >> >
{
};

/* 1190 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<std::string,std::vector<bool>,std::less<std::string >,std::allocator<std::pair<std::string const ,std::vector<bool> > >,0> > : std::_Tree_buy<std::pair<std::string const ,std::vector<bool> >>
{
};

/* 1191 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::string,std::vector<bool>,std::less<std::string >,std::allocator<std::pair<std::string const ,std::vector<bool> > >,0> > : std::_Tree_comp<0,std::_Tmap_traits<std::string,std::vector<bool>,std::less<std::string >,std::allocator<std::pair<std::string const ,std::vector<bool> > >,0> >
{
};

/* 1192 */
struct __cppobj std::map<std::string,std::vector<bool>> : std::_Tree<std::_Tmap_traits<std::string,std::vector<bool>,std::less<std::string >,std::allocator<std::pair<std::string const ,std::vector<bool> > >,0> >
{
};

/* 732 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<IQuest * const,PlayerQuestState> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 733 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IQuest * const,PlayerQuestState>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<IQuest * const,PlayerQuestState> > >
{
};

/* 760 */
struct __cppobj std::_Tree_buy<std::pair<IQuest * const,PlayerQuestState>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<IQuest * const,PlayerQuestState>> >
{
};

/* 761 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<IQuest *,PlayerQuestState,std::less<IQuest *>,std::allocator<std::pair<IQuest * const,PlayerQuestState> >,0> > : std::_Tree_buy<std::pair<IQuest * const,PlayerQuestState>>
{
};

/* 1023 */
struct __cppobj std::_Tree<std::_Tmap_traits<IQuest *,PlayerQuestState,std::less<IQuest *>,std::allocator<std::pair<IQuest * const,PlayerQuestState> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<IQuest *,PlayerQuestState,std::less<IQuest *>,std::allocator<std::pair<IQuest * const,PlayerQuestState> >,0> >
{
};

/* 1052 */
struct __cppobj std::map<IQuest *,PlayerQuestState> : std::_Tree<std::_Tmap_traits<IQuest *,PlayerQuestState,std::less<IQuest *>,std::allocator<std::pair<IQuest * const,PlayerQuestState> >,0> >
{
};

/* 643 */
struct __cppobj ActorRef<NPC>
{
  NPC *m_object;
};

/* 1199 */
struct __cppobj Player : Actor, IPlayer
{
  unsigned int m_characterId;
  std::string m_playerName;
  std::string m_teamName;
  unsigned __int8 m_avatarIndex;
  unsigned int m_colors[4];
  std::map<IItem *,ItemAndCount> m_inventory;
  std::set<std::string> m_pickups;
  std::map<IItem *,float> m_cooldowns;
  std::map<std::string,unsigned int> m_circuitInputs;
  std::map<std::string,std::vector<bool>> m_circuitOutputs;
  bool m_admin;
  bool m_pvpEnabled;
  bool m_pvpDesired;
  float m_pvpChangeTimer;
  int m_pvpChangeReportedTimer;
  bool m_changingServerRegion;
  std::string m_currentRegion;
  std::string m_changeRegionDestination;
  std::set<std::string> m_aiZones;
  int m_mana;
  float m_manaRegenTimer;
  float m_healthRegenCooldown;
  float m_healthRegenTimer;
  int m_countdown;
  Vector3 m_remoteLookPosition;
  Rotation m_remoteLookRotation;
  IItem *m_equipped[10];
  unsigned int m_currentSlot;
  std::map<IQuest *,PlayerQuestState> m_questStates;
  IQuest *m_currentQuest;
  float m_walkingSpeed;
  float m_jumpSpeed;
  float m_jumpHoldTime;
  ActorRef<NPC> m_currentNPC;
  std::string m_currentNPCState;
  ILocalPlayer *m_localPlayer;
  WriteStream *m_eventsToSend;
  bool m_itemsUpdated;
  float m_itemSyncTimer;
  unsigned int m_chatMessageCounter;
  float m_chatFloodDecayTimer;
  IItem *m_lastHitByItem;
  float m_lastHitItemTimeLeft;
  float m_circuitStateCooldownTimer;
};

/* 1 */
enum DamageType : __int32
{
  PhysicalDamage = 0x0,
  FireDamage = 0x1,
  ColdDamage = 0x2,
  ShockDamage = 0x3,
};

/* 565 */
struct /*VFT*/ IActor_vtbl
{
  void (__thiscall *~IActor)(IActor *this);
  void *(__thiscall *GetUE4Actor)(IActor *this);
  bool (__thiscall *IsNPC)(IActor *this);
  bool (__thiscall *IsPlayer)(IActor *this);
  IPlayer *(__thiscall *GetPlayerInterface)(IActor *this);
  void (__thiscall *AddRef)(IActor *this);
  void (__thiscall *Release)(IActor *this);
  void (__thiscall *OnSpawnActor)(IActor *this, IUE4Actor *);
  void (__thiscall *OnDestroyActor)(IActor *this);
  const char *(__thiscall *GetBlueprintName)(IActor *this);
  bool (__thiscall *IsCharacter)(IActor *this);
  bool (__thiscall *CanBeDamaged)(IActor *this, IActor *);
  int (__thiscall *GetHealth)(IActor *this);
  int (__thiscall *GetMaxHealth)(IActor *this);
  void (__thiscall *Damage)(IActor *this, IActor *, IItem *, int, DamageType);
  void (__thiscall *Tick)(IActor *this, float);
  bool (__thiscall *CanUse)(IActor *this, IPlayer *);
  void (__thiscall *OnUse)(IActor *this, IPlayer *);
  void (__thiscall *OnHit)(IActor *this, IActor *, const Vector3 *, const Vector3 *);
  void (__thiscall *OnAIMoveComplete)(IActor *this);
  const char *(__thiscall *GetDisplayName)(IActor *this);
  bool (__thiscall *IsElite)(IActor *this);
  bool (__thiscall *IsPvPEnabled)(IActor *this);
  IItem **(__thiscall *GetShopItems)(IActor *this, unsigned int *);
  void (__thiscall *FreeShopItems)(IActor *this, IItem **);
  int (__thiscall *GetBuyPriceForItem)(IActor *this, IItem *);
  int (__thiscall *GetSellPriceForItem)(IActor *this, IItem *);
  Vector3 *(__thiscall *GetLookPosition)(IActor *this, Vector3 *result);
  Rotation *(__thiscall *GetLookRotation)(IActor *this, Rotation *result);
  IActor *(__thiscall *GetOwner)(IActor *this);
};

/* 545 */
struct __cppobj IUE4Actor
{
  IUE4Actor_vtbl *__vftable /*VFT*/;
};

/* 620 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,TimerSet::TimerEvent> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<std::string const ,TimerSet::TimerEvent>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 621 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,TimerSet::TimerEvent>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,TimerSet::TimerEvent> > >
{
};

/* 622 */
struct __cppobj std::_Tree_buy<std::pair<std::string const ,TimerSet::TimerEvent>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,TimerSet::TimerEvent>> >
{
};

/* 623 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<std::string,TimerSet::TimerEvent,std::less<std::string >,std::allocator<std::pair<std::string const ,TimerSet::TimerEvent> >,0> > : std::_Tree_buy<std::pair<std::string const ,TimerSet::TimerEvent>>
{
};

/* 624 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::string,TimerSet::TimerEvent,std::less<std::string >,std::allocator<std::pair<std::string const ,TimerSet::TimerEvent> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<std::string,TimerSet::TimerEvent,std::less<std::string >,std::allocator<std::pair<std::string const ,TimerSet::TimerEvent> >,0> >
{
};

/* 625 */
struct __cppobj std::map<std::string,TimerSet::TimerEvent> : std::_Tree<std::_Tmap_traits<std::string,TimerSet::TimerEvent,std::less<std::string >,std::allocator<std::pair<std::string const ,TimerSet::TimerEvent> >,0> >
{
};

/* 584 */
struct __cppobj TimerSet
{
  std::map<std::string,TimerSet::TimerEvent> m_timers;
};

/* 587 */
struct __cppobj __declspec(align(4)) std::pair<std::string const ,bool>
{
  const std::string first;
  bool second;
};

/* 586 */
struct __cppobj std::_Tree_node<std::pair<std::string const ,bool>,void *>
{
  std::_Tree_node<std::pair<std::string const ,bool>,void *> *_Left;
  std::_Tree_node<std::pair<std::string const ,bool>,void *> *_Parent;
  std::_Tree_node<std::pair<std::string const ,bool>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<std::string const ,bool> _Myval;
};

/* 594 */
struct __cppobj AIZoneListener
{
  AIZoneListener_vtbl *__vftable /*VFT*/;
  AIZone *m_zone;
};

/* 606 */
struct __cppobj std::_Vector_val<std::_Simple_types<ActorRef<Actor> > > : std::_Container_base0
{
  ActorRef<Actor> *_Myfirst;
  ActorRef<Actor> *_Mylast;
  ActorRef<Actor> *_Myend;
};

/* 607 */
struct __cppobj std::_Vector_alloc<0,std::_Vec_base_types<ActorRef<Actor>> > : std::_Vector_val<std::_Simple_types<ActorRef<Actor> > >
{
};

/* 608 */
struct __cppobj std::vector<ActorRef<Actor>> : std::_Vector_alloc<0,std::_Vec_base_types<ActorRef<Actor>> >
{
};

/* 609 */
struct __cppobj Spawner : AIZoneListener
{
  std::vector<ActorRef<Actor>> m_actors;
  Vector3 m_position;
  Rotation m_rotation;
  unsigned int m_maxActors;
  float m_maxSpawnTimer;
  float m_currentSpawnTimer;
};

/* 559 */
struct PlayerQuestState
{
  IQuestState *state;
  unsigned int count;
};

/* 564 */
struct /*VFT*/ IPlayer_vtbl
{
  IActor *(__thiscall *GetActorInterface)(IPlayer *this);
  bool (__thiscall *IsLocalPlayer)(IPlayer *this);
  ILocalPlayer *(__thiscall *GetLocalPlayer)(IPlayer *this);
  const char *(__thiscall *GetPlayerName)(IPlayer *this);
  const char *(__thiscall *GetTeamName)(IPlayer *this);
  unsigned __int8 (__thiscall *GetAvatarIndex)(IPlayer *this);
  const unsigned int *(__thiscall *GetColors)(IPlayer *this);
  bool (__thiscall *IsPvPDesired)(IPlayer *this);
  void (__thiscall *SetPvPDesired)(IPlayer *this, bool);
  IInventory *(__thiscall *GetInventory)(IPlayer *this);
  unsigned int (__thiscall *GetItemCount)(IPlayer *this, IItem *);
  unsigned int (__thiscall *GetLoadedAmmo)(IPlayer *this, IItem *);
  bool (__thiscall *AddItem)(IPlayer *this, IItem *, unsigned int, bool);
  bool (__thiscall *RemoveItem)(IPlayer *this, IItem *, unsigned int);
  bool (__thiscall *AddLoadedAmmo)(IPlayer *this, IItem *, IItem *, unsigned int);
  bool (__thiscall *RemoveLoadedAmmo)(IPlayer *this, IItem *, unsigned int);
  IItem *(__thiscall *GetItemForSlot)(IPlayer *this, unsigned int);
  void (__thiscall *EquipItem)(IPlayer *this, unsigned int, IItem *);
  unsigned int (__thiscall *GetCurrentSlot)(IPlayer *this);
  void (__thiscall *SetCurrentSlot)(IPlayer *this, unsigned int);
  IItem *(__thiscall *GetCurrentItem)(IPlayer *this);
  int (__thiscall *GetMana)(IPlayer *this);
  bool (__thiscall *UseMana)(IPlayer *this, int);
  void (__thiscall *SetItemCooldown)(IPlayer *this, IItem *, float, bool);
  bool (__thiscall *IsItemOnCooldown)(IPlayer *this, IItem *);
  float (__thiscall *GetItemCooldown)(IPlayer *this, IItem *);
  bool (__thiscall *HasPickedUp)(IPlayer *this, const char *);
  void (__thiscall *MarkAsPickedUp)(IPlayer *this, const char *);
  IQuest **(__thiscall *GetQuestList)(IPlayer *this, unsigned int *);
  void (__thiscall *FreeQuestList)(IPlayer *this, IQuest **);
  IQuest *(__thiscall *GetCurrentQuest)(IPlayer *this);
  void (__thiscall *SetCurrentQuest)(IPlayer *this, IQuest *);
  PlayerQuestState (__thiscall *GetStateForQuest)(IPlayer *this, IQuest *);
  void (__thiscall *StartQuest)(IPlayer *this, IQuest *);
  void (__thiscall *AdvanceQuestToState)(IPlayer *this, IQuest *, IQuestState *);
  void (__thiscall *CompleteQuest)(IPlayer *this, IQuest *);
  bool (__thiscall *IsQuestStarted)(IPlayer *this, IQuest *);
  bool (__thiscall *IsQuestCompleted)(IPlayer *this, IQuest *);
  void (__thiscall *EnterAIZone)(IPlayer *this, const char *);
  void (__thiscall *ExitAIZone)(IPlayer *this, const char *);
  void (__thiscall *UpdateCountdown)(IPlayer *this, int);
  bool (__thiscall *CanReload)(IPlayer *this);
  void (__thiscall *RequestReload)(IPlayer *this);
  float (__thiscall *GetWalkingSpeed)(IPlayer *this);
  float (__thiscall *GetSprintMultiplier)(IPlayer *this);
  float (__thiscall *GetJumpSpeed)(IPlayer *this);
  float (__thiscall *GetJumpHoldTime)(IPlayer *this);
  bool (__thiscall *CanJump)(IPlayer *this);
  void (__thiscall *SetJumpState)(IPlayer *this, bool);
  void (__thiscall *SetSprintState)(IPlayer *this, bool);
  void (__thiscall *SetFireRequestState)(IPlayer *this, bool);
  void (__thiscall *TransitionToNPCState)(IPlayer *this, const char *);
  void (__thiscall *BuyItem)(IPlayer *this, IActor *, IItem *, unsigned int);
  void (__thiscall *SellItem)(IPlayer *this, IActor *, IItem *, unsigned int);
  void (__thiscall *EnterRegion)(IPlayer *this, const char *);
  void (__thiscall *Respawn)(IPlayer *this);
  void (__thiscall *Teleport)(IPlayer *this, const char *);
  void (__thiscall *Chat)(IPlayer *this, const char *);
  IFastTravel *(__thiscall *GetFastTravelDestinations)(IPlayer *this, const char *);
  void (__thiscall *FastTravel)(IPlayer *this, const char *, const char *);
  void (__thiscall *MarkAsAchieved)(IPlayer *this, IAchievement *);
  bool (__thiscall *HasAchieved)(IPlayer *this, IAchievement *);
  void (__thiscall *SubmitDLCKey)(IPlayer *this, const char *);
  unsigned int (__thiscall *GetCircuitInputs)(IPlayer *this, const char *);
  void (__thiscall *SetCircuitInputs)(IPlayer *this, const char *, unsigned int);
  void (__thiscall *GetCircuitOutputs)(IPlayer *this, const char *, bool *, unsigned int);
};

/* 710 */
struct ItemAndCount
{
  IItem *item;
  unsigned int count;
  unsigned int loadedAmmo;
};

/* 711 */
struct __cppobj std::pair<IItem * const,ItemAndCount>
{
  IItem *const first;
  ItemAndCount second;
};

/* 709 */
struct __cppobj std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *>
{
  std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *> *_Left;
  std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *> *_Parent;
  std::_Tree_node<std::pair<IItem * const,ItemAndCount>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<IItem * const,ItemAndCount> _Myval;
};

/* 675 */
struct __cppobj std::_Tree_node<std::string,void *>
{
  std::_Tree_node<std::string,void *> *_Left;
  std::_Tree_node<std::string,void *> *_Parent;
  std::_Tree_node<std::string,void *> *_Right;
  char _Color;
  char _Isnil;
  std::string _Myval;
};

/* 661 */
struct __cppobj std::pair<IItem * const,float>
{
  IItem *const first;
  float second;
};

/* 663 */
struct __cppobj std::_Tree_node<std::pair<IItem * const,float>,void *>
{
  std::_Tree_node<std::pair<IItem * const,float>,void *> *_Left;
  std::_Tree_node<std::pair<IItem * const,float>,void *> *_Parent;
  std::_Tree_node<std::pair<IItem * const,float>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<IItem * const,float> _Myval;
};

/* 1173 */
struct __cppobj std::pair<std::string const ,unsigned int>
{
  const std::string first;
  unsigned int second;
};

/* 1172 */
struct __cppobj std::_Tree_node<std::pair<std::string const ,unsigned int>,void *>
{
  std::_Tree_node<std::pair<std::string const ,unsigned int>,void *> *_Left;
  std::_Tree_node<std::pair<std::string const ,unsigned int>,void *> *_Parent;
  std::_Tree_node<std::pair<std::string const ,unsigned int>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<std::string const ,unsigned int> _Myval;
};

/* 1181 */
struct __cppobj std::_Vector_val<std::_Simple_types<unsigned int> > : std::_Container_base0
{
  unsigned int *_Myfirst;
  unsigned int *_Mylast;
  unsigned int *_Myend;
};

/* 1182 */
struct __cppobj std::_Vector_alloc<0,std::_Vec_base_types<unsigned int> > : std::_Vector_val<std::_Simple_types<unsigned int> >
{
};

/* 1183 */
struct __cppobj std::vector<unsigned int> : std::_Vector_alloc<0,std::_Vec_base_types<unsigned int> >
{
};

/* 1184 */
struct __cppobj std::_Vb_val<std::allocator<bool> > : std::_Container_base0
{
  std::vector<unsigned int> _Myvec;
  unsigned int _Mysize;
};

/* 1185 */
struct __cppobj std::vector<bool> : std::_Vb_val<std::allocator<bool> >
{
};

/* 1186 */
struct __cppobj std::pair<std::string const ,std::vector<bool> >
{
  const std::string first;
  std::vector<bool> second;
};

/* 1180 */
struct __cppobj std::_Tree_node<std::pair<std::string const ,std::vector<bool> >,void *>
{
  std::_Tree_node<std::pair<std::string const ,std::vector<bool> >,void *> *_Left;
  std::_Tree_node<std::pair<std::string const ,std::vector<bool> >,void *> *_Parent;
  std::_Tree_node<std::pair<std::string const ,std::vector<bool> >,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<std::string const ,std::vector<bool> > _Myval;
};

/* 548 */
struct __cppobj IItem
{
  IItem_vtbl *__vftable /*VFT*/;
};

/* 651 */
struct __cppobj std::pair<IQuest * const,PlayerQuestState>
{
  IQuest *const first;
  PlayerQuestState second;
};

/* 671 */
struct __cppobj std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *>
{
  std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *> *_Left;
  std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *> *_Parent;
  std::_Tree_node<std::pair<IQuest * const,PlayerQuestState>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<IQuest * const,PlayerQuestState> _Myval;
};

/* 552 */
struct __cppobj IQuest
{
  IQuest_vtbl *__vftable /*VFT*/;
};

/* 635 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,NPCState> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<std::string const ,NPCState>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 636 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,NPCState>> > : std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,NPCState> > >
{
};

/* 637 */
struct __cppobj std::_Tree_buy<std::pair<std::string const ,NPCState>> : std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::string const ,NPCState>> >
{
};

/* 638 */
struct __cppobj std::_Tree_comp<0,std::_Tmap_traits<std::string,NPCState,std::less<std::string >,std::allocator<std::pair<std::string const ,NPCState> >,0> > : std::_Tree_buy<std::pair<std::string const ,NPCState>>
{
};

/* 639 */
struct __cppobj std::_Tree<std::_Tmap_traits<std::string,NPCState,std::less<std::string >,std::allocator<std::pair<std::string const ,NPCState> >,0> > : std::_Tree_comp<0,std::_Tmap_traits<std::string,NPCState,std::less<std::string >,std::allocator<std::pair<std::string const ,NPCState> >,0> >
{
};

/* 640 */
struct __cppobj std::map<std::string,NPCState> : std::_Tree<std::_Tmap_traits<std::string,NPCState,std::less<std::string >,std::allocator<std::pair<std::string const ,NPCState> >,0> >
{
};

/* 641 */
struct __cppobj NPC : Actor
{
  std::map<std::string,NPCState> m_states;
};

/* 551 */
struct __cppobj ILocalPlayer : IUE4Actor
{
};

/* 1195 */
struct __cppobj std::_Vector_val<std::_Simple_types<unsigned char> > : std::_Container_base0
{
  unsigned __int8 *_Myfirst;
  unsigned __int8 *_Mylast;
  unsigned __int8 *_Myend;
};

/* 1196 */
struct __cppobj std::_Vector_alloc<0,std::_Vec_base_types<unsigned char> > : std::_Vector_val<std::_Simple_types<unsigned char> >
{
};

/* 1197 */
struct __cppobj std::vector<unsigned char> : std::_Vector_alloc<0,std::_Vec_base_types<unsigned char> >
{
};

/* 1198 */
struct __cppobj WriteStream
{
  Socket *m_sock;
  std::vector<unsigned char> m_buffer;
};

/* 550 */
struct /*VFT*/ IUE4Actor_vtbl
{
  void *(__thiscall *GetUE4Actor)(IUE4Actor *this);
  void (__thiscall *RemoveFromWorld)(IUE4Actor *this);
  Vector3 *(__thiscall *GetPosition)(IUE4Actor *this, Vector3 *result);
  Rotation *(__thiscall *GetRotation)(IUE4Actor *this, Rotation *result);
  Vector3 *(__thiscall *GetProjectilePosition)(IUE4Actor *this, Vector3 *result);
  Vector3 *(__thiscall *GetCharacterVelocity)(IUE4Actor *this, Vector3 *result);
  void (__thiscall *SetPosition)(IUE4Actor *this, const Vector3 *);
  void (__thiscall *SetRotation)(IUE4Actor *this, const Rotation *);
  void (__thiscall *SetCharacterVelocity)(IUE4Actor *this, const Vector3 *);
  void (__thiscall *SetForwardAndStrafeMovement)(IUE4Actor *this, float, float);
  void (__thiscall *InterpolatePositionAndRotation)(IUE4Actor *this, const Vector3 *, const Rotation *, float, float);
  bool (__thiscall *MoveToLocation)(IUE4Actor *this, const Vector3 *);
  bool (__thiscall *MoveToRandomLocationInRadius)(IUE4Actor *this, float);
  bool (__thiscall *MoveToActor)(IUE4Actor *this, IActor *);
  void (__thiscall *OnUpdateState)(IUE4Actor *this, const char *, bool);
  void (__thiscall *OnTriggerEvent)(IUE4Actor *this, const char *, IActor *);
  void (__thiscall *OnUpdatePvPEnabled)(IUE4Actor *this, bool);
  IActor *(__thiscall *LineTraceTo)(IUE4Actor *this, const Vector3 *);
  void (__thiscall *FireBullets)(IUE4Actor *this, IItem *, int, DamageType, const Vector3 *, unsigned int, float);
  void (__thiscall *LocalRespawn)(IUE4Actor *this, const Vector3 *, const Rotation *);
  bool (__thiscall *IsOnGround)(IUE4Actor *this);
  void (__thiscall *OnReload)(IUE4Actor *this, unsigned int);
};

/* 572 */
struct __cppobj std::_Fun_class_base<void>
{
};

/* 573 */
union __declspec(align(8)) std::_Func_class<void>::<unnamed_type__Space>
{
  void (__cdecl *_Pfn[3])();
  void *_Pobj[3];
  long double _Ldbl;
  char _Alias[12];
};

/* 578 */
struct __cppobj __declspec(align(8)) std::_Func_class<void> : std::_Fun_class_base<void>
{
  std::_Func_class<void>::<unnamed_type__Space> _Space;
  std::_Func_base<void> *_Impl;
};

/* 579 */
struct __cppobj std::function<void __cdecl(void)> : std::_Func_class<void>
{
};

/* 580 */
struct __cppobj std::unary_function<Actor *,void>
{
};

/* 581 */
struct __cppobj std::_Fun_class_base<void,Actor *> : std::unary_function<Actor *,void>
{
};

/* 582 */
union __declspec(align(8)) std::_Func_class<void,Actor *>::<unnamed_type__Space>
{
  void (__cdecl *_Pfn[3])();
  void *_Pobj[3];
  long double _Ldbl;
  char _Alias[12];
};

/* 616 */
struct __cppobj __declspec(align(8)) std::_Func_class<void,Actor *> : std::_Fun_class_base<void,Actor *>
{
  std::_Func_class<void,Actor *>::<unnamed_type__Space> _Space;
  std::_Func_base<void,Actor *> *_Impl;
};

/* 617 */
struct __cppobj std::function<void __cdecl(Actor *)> : std::_Func_class<void,Actor *>
{
};

/* 618 */
struct __cppobj TimerSet::TimerEvent
{
  float timeLeft;
  float initialTime;
  bool recurring;
  bool withContext;
  std::function<void __cdecl(void)> callback;
  std::function<void __cdecl(Actor *)> contextCallback;
};

/* 619 */
struct __cppobj std::pair<std::string const ,TimerSet::TimerEvent>
{
  const std::string first;
  TimerSet::TimerEvent second;
};

/* 567 */
struct __cppobj std::_Tree_node<std::pair<std::string const ,TimerSet::TimerEvent>,void *>
{
  std::_Tree_node<std::pair<std::string const ,TimerSet::TimerEvent>,void *> *_Left;
  std::_Tree_node<std::pair<std::string const ,TimerSet::TimerEvent>,void *> *_Parent;
  std::_Tree_node<std::pair<std::string const ,TimerSet::TimerEvent>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<std::string const ,TimerSet::TimerEvent> _Myval;
};

/* 595 */
struct /*VFT*/ AIZoneListener_vtbl
{
  void (__thiscall *~AIZoneListener)(AIZoneListener *this);
  void (__thiscall *OnAIZoneActivated)(AIZoneListener *this);
  void (__thiscall *OnAIZoneDeactivated)(AIZoneListener *this);
};

/* 597 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<AIZoneListener *> > : std::_Container_base0
{
  std::_Tree_node<AIZoneListener *,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 598 */
struct __cppobj std::_Tree_alloc<0,std::_Tree_base_types<AIZoneListener *> > : std::_Tree_val<std::_Tree_simple_types<AIZoneListener *> >
{
};

/* 599 */
struct __cppobj std::_Tree_buy<AIZoneListener *> : std::_Tree_alloc<0,std::_Tree_base_types<AIZoneListener *> >
{
};

/* 600 */
struct __cppobj std::_Tree_comp<0,std::_Tset_traits<AIZoneListener *,std::less<AIZoneListener *>,std::allocator<AIZoneListener *>,0> > : std::_Tree_buy<AIZoneListener *>
{
};

/* 601 */
struct __cppobj std::_Tree<std::_Tset_traits<AIZoneListener *,std::less<AIZoneListener *>,std::allocator<AIZoneListener *>,0> > : std::_Tree_comp<0,std::_Tset_traits<AIZoneListener *,std::less<AIZoneListener *>,std::allocator<AIZoneListener *>,0> >
{
};

/* 602 */
struct __cppobj std::set<AIZoneListener *> : std::_Tree<std::_Tset_traits<AIZoneListener *,std::less<AIZoneListener *>,std::allocator<AIZoneListener *>,0> >
{
};

/* 603 */
struct __cppobj AIZone
{
  std::string m_name;
  unsigned int m_playerCount;
  std::set<AIZoneListener *> m_listeners;
};

/* 605 */
struct __cppobj ActorRef<Actor>
{
  Actor *m_object;
};

/* 557 */
struct __cppobj IInventory
{
  IInventory_vtbl *__vftable /*VFT*/;
};

/* 553 */
struct __cppobj IQuestState
{
  IQuestState_vtbl *__vftable /*VFT*/;
};

/* 560 */
struct __cppobj IFastTravel
{
  IFastTravel_vtbl *__vftable /*VFT*/;
};

/* 562 */
struct __cppobj IAchievement
{
  IAchievement_vtbl *__vftable /*VFT*/;
};

/* 2 */
enum ItemRarity : __int32
{
  ResourceItem = 0x0,
  NormalItem = 0x1,
  RareItem = 0x2,
  LegendaryItem = 0x3,
  LeetItem = 0x4,
};

/* 549 */
struct /*VFT*/ IItem_vtbl
{
  void (__thiscall *~IItem)(IItem *this);
  const char *(__thiscall *GetName)(IItem *this);
  const char *(__thiscall *GetDisplayName)(IItem *this);
  const char *(__thiscall *GetItemTypeName)(IItem *this);
  const char *(__thiscall *GetDescription)(IItem *this);
  const char *(__thiscall *GetFlavorText)(IItem *this);
  bool (__thiscall *CanEquip)(IItem *this);
  unsigned int (__thiscall *GetMaximumCount)(IItem *this);
  bool (__thiscall *CanActivate)(IItem *this, IPlayer *);
  bool (__thiscall *CanActivateInInventory)(IItem *this);
  void (__thiscall *Activate)(IItem *this, IPlayer *);
  bool (__thiscall *ShowInInventory)(IItem *this);
  bool (__thiscall *ShowEventOnPickup)(IItem *this);
  bool (__thiscall *ShowEventOnDuplicatePickup)(IItem *this);
  bool (__thiscall *ShowNotificationOnPickup)(IItem *this);
  float (__thiscall *GetCooldownTime)(IItem *this);
  ItemRarity (__thiscall *GetItemRarity)(IItem *this);
  IItem *(__thiscall *GetAmmoType)(IItem *this);
  unsigned int (__thiscall *GetClipSize)(IItem *this);
  int (__thiscall *GetDamage)(IItem *this);
  int (__thiscall *GetDamagePerSecond)(IItem *this);
  DamageType (__thiscall *GetDamageType)(IItem *this);
  int (__thiscall *GetManaCost)(IItem *this);
  const char *(__thiscall *GetCustomCostDescription)(IItem *this);
  bool (__thiscall *IsAutoFire)(IItem *this);
  unsigned int (__thiscall *GetNumberOfProjectiles)(IItem *this);
  float (__thiscall *GetReloadTime)(IItem *this, int);
  bool (__thiscall *HasPartialReload)(IItem *this);
  float (__thiscall *GetRange)(IItem *this);
  int (__thiscall *GetTradeValue)(IItem *this);
  bool (__thiscall *IsDynamic)(IItem *this);
  bool (__thiscall *IsUpdating)(IItem *this);
};

/* 555 */
struct /*VFT*/ IQuest_vtbl
{
  const char *(__thiscall *GetName)(IQuest *this);
  const char *(__thiscall *GetDescription)(IQuest *this);
  IQuestState *(__thiscall *GetStartingState)(IQuest *this);
  IQuestState *(__thiscall *GetStateByName)(IQuest *this, const char *);
};

/* 630 */
struct __cppobj std::_Vector_val<std::_Simple_types<NPCStateTransition> > : std::_Container_base0
{
  NPCStateTransition *_Myfirst;
  NPCStateTransition *_Mylast;
  NPCStateTransition *_Myend;
};

/* 631 */
struct __cppobj std::_Vector_alloc<0,std::_Vec_base_types<NPCStateTransition> > : std::_Vector_val<std::_Simple_types<NPCStateTransition> >
{
};

/* 632 */
struct __cppobj std::vector<NPCStateTransition> : std::_Vector_alloc<0,std::_Vec_base_types<NPCStateTransition> >
{
};

/* 633 */
struct __cppobj NPCState
{
  std::string text;
  std::vector<NPCStateTransition> transitions;
};

/* 634 */
struct __cppobj std::pair<std::string const ,NPCState>
{
  const std::string first;
  NPCState second;
};

/* 628 */
struct __cppobj std::_Tree_node<std::pair<std::string const ,NPCState>,void *>
{
  std::_Tree_node<std::pair<std::string const ,NPCState>,void *> *_Left;
  std::_Tree_node<std::pair<std::string const ,NPCState>,void *> *_Parent;
  std::_Tree_node<std::pair<std::string const ,NPCState>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<std::string const ,NPCState> _Myval;
};

/* 1193 */
struct __cppobj Socket
{
  Socket_vtbl *__vftable /*VFT*/;
  std::string m_lastErrorMessage;
};

/* 574 */
struct __cppobj std::_Func_base<void>
{
  std::_Func_base<void>_vtbl *__vftable /*VFT*/;
};

/* 583 */
struct __cppobj std::_Func_base<void,Actor *>
{
  std::_Func_base<void,Actor *>_vtbl *__vftable /*VFT*/;
};

/* 596 */
struct std::_Tree_node<AIZoneListener *,void *>
{
  std::_Tree_node<AIZoneListener *,void *> *_Left;
  std::_Tree_node<AIZoneListener *,void *> *_Parent;
  std::_Tree_node<AIZoneListener *,void *> *_Right;
  char _Color;
  char _Isnil;
  AIZoneListener *_Myval;
};

/* 558 */
struct /*VFT*/ IInventory_vtbl
{
  void (__thiscall *~IInventory)(IInventory *this);
  unsigned int (__thiscall *GetCount)(IInventory *this);
  IItem *(__thiscall *GetItem)(IInventory *this, unsigned int);
  unsigned int (__thiscall *GetItemCount)(IInventory *this, unsigned int);
  unsigned int (__thiscall *GetItemLoadedAmmo)(IInventory *this, unsigned int);
  void (__thiscall *Destroy)(IInventory *this);
};

/* 554 */
struct /*VFT*/ IQuestState_vtbl
{
  const char *(__thiscall *GetName)(IQuestState *this);
  const char *(__thiscall *GetDescription)(IQuestState *this);
  void (__thiscall *CheckForEarlyCompletion)(IQuestState *this, IPlayer *);
  void (__thiscall *OnItemAcquired)(IQuestState *this, IPlayer *, IItem *);
  void (__thiscall *OnItemPickupUsed)(IQuestState *this, IPlayer *, const char *);
};

/* 561 */
struct /*VFT*/ IFastTravel_vtbl
{
  void (__thiscall *~IFastTravel)(IFastTravel *this);
  unsigned int (__thiscall *GetCount)(IFastTravel *this);
  const char *(__thiscall *GetRegionName)(IFastTravel *this, unsigned int);
  const char *(__thiscall *GetDisplayName)(IFastTravel *this, unsigned int);
  void (__thiscall *Destroy)(IFastTravel *this);
};

/* 563 */
struct /*VFT*/ IAchievement_vtbl
{
  const char *(__thiscall *GetName)(IAchievement *this);
  const char *(__thiscall *GetDisplayName)(IAchievement *this);
  const char *(__thiscall *GetDescription)(IAchievement *this);
};

/* 6 */
enum NPCStateTransitionType : __int32
{
  EndConversationTransition = 0x0,
  ContinueConversationTransition = 0x1,
  ShopTransition = 0x2,
};

/* 629 */
struct __cppobj NPCStateTransition
{
  std::string text;
  NPCStateTransitionType type;
  std::string nextState;
};

/* 1194 */
struct /*VFT*/ Socket_vtbl
{
  void (__thiscall *~Socket)(Socket *this);
  bool (__thiscall *Read)(Socket *this, void *, unsigned int);
  bool (__thiscall *Write)(Socket *this, const void *, unsigned int);
};

/* 577 */
struct /*VFT*/ std::_Func_base<void>_vtbl
{
  std::_Func_base<void> *(__thiscall *_Copy)(std::_Func_base<void> *this, void *);
  std::_Func_base<void> *(__thiscall *_Move)(std::_Func_base<void> *this, void *);
  void (__thiscall *_Do_call)(std::_Func_base<void> *this);
  const type_info *(__thiscall *_Target_type)(std::_Func_base<void> *this);
  void (__thiscall *_Delete_this)(std::_Func_base<void> *this, bool);
  void (__thiscall *~_Func_base<void>)(std::_Func_base<void> *this);
  const void *(__thiscall *_Get)(std::_Func_base<void> *this);
};

/* 615 */
struct /*VFT*/ std::_Func_base<void,Actor *>_vtbl
{
  std::_Func_base<void,Actor *> *(__thiscall *_Copy)(std::_Func_base<void,Actor *> *this, void *);
  std::_Func_base<void,Actor *> *(__thiscall *_Move)(std::_Func_base<void,Actor *> *this, void *);
  void (__thiscall *_Do_call)(std::_Func_base<void,Actor *> *this, Actor **);
  const type_info *(__thiscall *_Target_type)(std::_Func_base<void,Actor *> *this);
  void (__thiscall *_Delete_this)(std::_Func_base<void,Actor *> *this, bool);
  void (__thiscall *~_Func_base<void,Actor *>)(std::_Func_base<void,Actor *> *this);
  const void *(__thiscall *_Get)(std::_Func_base<void,Actor *> *this);
};

/* 575 */
const struct __cppobj __declspec(align(4)) type_info
{
  type_info_vtbl *__vftable /*VFT*/;
  void *_M_data;
  char _M_d_name[1];
};

/* 576 */
struct /*VFT*/ type_info_vtbl
{
  void (__thiscall *~type_info)(type_info *this);
};

/* 1200 */
struct /*VFT*/ Player_vtbl
{
  void (__thiscall *~IActor)(IActor *this);
  void *(__thiscall *GetUE4Actor)(IActor *this);
  bool (__thiscall *IsNPC)(IActor *this);
  bool (__thiscall *IsPlayer)(IActor *this);
  IPlayer *(__thiscall *GetPlayerInterface)(IActor *this);
  void (__thiscall *AddRef)(IActor *this);
  void (__thiscall *Release)(IActor *this);
  void (__thiscall *OnSpawnActor)(IActor *this, IUE4Actor *);
  void (__thiscall *OnDestroyActor)(IActor *this);
  const char *(__thiscall *GetBlueprintName)(IActor *this);
  bool (__thiscall *IsCharacter)(IActor *this);
  bool (__thiscall *CanBeDamaged)(IActor *this, IActor *);
  int (__thiscall *GetHealth)(IActor *this);
  int (__thiscall *GetMaxHealth)(IActor *this);
  void (__thiscall *Damage)(IActor *this, IActor *, IItem *, int, DamageType);
  void (__thiscall *Tick)(IActor *this, float);
  bool (__thiscall *CanUse)(IActor *this, IPlayer *);
  void (__thiscall *OnUse)(IActor *this, IPlayer *);
  void (__thiscall *OnHit)(IActor *this, IActor *, const Vector3 *, const Vector3 *);
  void (__thiscall *OnAIMoveComplete)(IActor *this);
  const char *(__thiscall *GetDisplayName)(IActor *this);
  bool (__thiscall *IsElite)(IActor *this);
  bool (__thiscall *IsPvPEnabled)(IActor *this);
  IItem **(__thiscall *GetShopItems)(IActor *this, unsigned int *);
  void (__thiscall *FreeShopItems)(IActor *this, IItem **);
  int (__thiscall *GetBuyPriceForItem)(IActor *this, IItem *);
  int (__thiscall *GetSellPriceForItem)(IActor *this, IItem *);
  Vector3 *(__thiscall *GetLookPosition)(IActor *this, Vector3 *result);
  Rotation *(__thiscall *GetLookRotation)(IActor *this, Rotation *result);
  IActor *(__thiscall *GetOwner)(IActor *this);
  void (__thiscall *OnKilled)(Actor *this, IActor *, IItem *);
  void (__thiscall *OnTargetKilled)(Actor *this, IActor *, IItem *);
  bool (__thiscall *IsValid)(Actor *this);
  std::string *(__thiscall *GetDeathMessage)(Actor *this, std::string *result);
  bool (__thiscall *IsProjectile)(Actor *this);
  bool (__thiscall *ShouldSendPositionUpdates)(Actor *this);
  bool (__thiscall *ShouldReceivePositionUpdates)(Actor *this);
  void (__thiscall *UpdateState)(Actor *this, const std::string *, bool);
  void (__thiscall *TriggerEvent)(Actor *this, const std::string *, IActor *, bool);
  float (__thiscall *GetMaximumDamageDistance)(Actor *this);
  void (__thiscall *PerformUse)(Actor *this, IPlayer *);
  std::vector<IItem *> *(__thiscall *GetShopItems)(Actor *this, std::vector<IItem *> *result);
  std::vector<IItem *> *(__thiscall *GetValidBuyItems)(Actor *this, std::vector<IItem *> *result);
  float (__thiscall *GetShopBuyPriceMultiplier)(Actor *this);
  float (__thiscall *GetShopSellPriceMultiplier)(Actor *this);
  void (__thiscall *SendEvent)(Player *this, const WriteStream *);
  void (__thiscall *WriteAllEvents)(Player *this, WriteStream *);
};

/* 611 */
struct __cppobj std::_Vector_val<std::_Simple_types<IItem *> > : std::_Container_base0
{
  IItem **_Myfirst;
  IItem **_Mylast;
  IItem **_Myend;
};

/* 612 */
struct __cppobj std::_Vector_alloc<0,std::_Vec_base_types<IItem *> > : std::_Vector_val<std::_Simple_types<IItem *> >
{
};

/* 613 */
struct __cppobj std::vector<IItem *> : std::_Vector_alloc<0,std::_Vec_base_types<IItem *> >
{
};

